// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CreateUserUseCase is an autogenerated mock type for the CreateUserUseCase type
type CreateUserUseCase struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, name, firstname
func (_m *CreateUserUseCase) Create(ctx context.Context, name string, firstname string) error {
	ret := _m.Called(ctx, name, firstname)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, name, firstname)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCreateUserUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateUserUseCase creates a new instance of CreateUserUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateUserUseCase(t mockConstructorTestingTNewCreateUserUseCase) *CreateUserUseCase {
	mock := &CreateUserUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
